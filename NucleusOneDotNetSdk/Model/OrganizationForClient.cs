using System.Linq;

namespace NucleusOneDotNetSdk.Model
{
    // Originally generated by nucleus_one_utilities.
    public interface IOrganizationForClientMixin
    {
        string Id { get; set; }
        string CreatedOn { get; set; }
        string Name { get; set; }
        string CreatingUserID { get; set; }
        string CreatingUserName { get; set; }
        string CreatingUserEmail { get; set; }
        string CrmAccountId { get; set; }
        bool SubscriptionRequired { get; set; }
        int SubscriptionFreeUsers { get; set; }
        string SubscriptionExpiration { get; set; }
        string SearchIndexID { get; set; }
        string BucketName { get; set; }
        bool Disabled { get; set; }
        bool IsMarkedForPurge { get; set; }
        string PurgeDate { get; set; }
        int UniqueNonReadOnlyOrganizationMembers { get; set; }
        int UniqueReadOnlyOrganizationMembers { get; set; }
        int UniqueFreeOrganizationMembers { get; set; }
        int UniqueBillableOrganizationMembers { get; set; }
    }

    // Originally generated by nucleus_one_utilities.
    public class OrganizationForClient : Common.Model.Entity<ApiModel.OrganizationForClient>, IOrganizationForClientMixin
    {
        private OrganizationForClient(NucleusOneApp app) : base(app) { }

        public static OrganizationForClient FromApiModel(
            ApiModel.OrganizationForClient apiModel,
            NucleusOneApp app = null
        )
        {
            return new OrganizationForClient(app)
            {
                Id = apiModel.Id,
                CreatedOn = apiModel.CreatedOn,
                Name = apiModel.Name,
                CreatedByUserID = apiModel.CreatedByUserID,
                CreatedByUserName = apiModel.CreatedByUserName,
                CreatedByUserEmail = apiModel.CreatedByUserEmail,
                SubscriptionRequired = apiModel.SubscriptionRequired.Value,
                SubscriptionFreeUsers = apiModel.SubscriptionFreeUsers.Value,
                SubscriptionExpiration = apiModel.SubscriptionExpiration,
                UniqueNonReadOnlyOrganizationMembers = apiModel.UniqueNonReadOnlyOrganizationMembers.Value,
                UniqueReadOnlyOrganizationMembers = apiModel.UniqueReadOnlyOrganizationMembers.Value,
                UniqueFreeOrganizationMembers = apiModel.UniqueFreeOrganizationMembers.Value,
                UniqueBillableOrganizationMembers = apiModel.UniqueBillableOrganizationMembers.Value
            };
        }

        #region Properties

        public string Id { get; set; }
        public string CreatedOn { get; set; }
        public string Name { get; set; }
        public string CreatingUserID { get; set; }
        public string CreatingUserName { get; set; }
        public string CreatingUserEmail { get; set; }
        public string CrmAccountId { get; set; }
        public bool SubscriptionRequired { get; set; }
        public int SubscriptionFreeUsers { get; set; }
        public string SubscriptionExpiration { get; set; }
        public string SearchIndexID { get; set; }
        public string BucketName { get; set; }
        public bool Disabled { get; set; }
        public bool IsMarkedForPurge { get; set; }
        public string PurgeDate { get; set; }
        public int UniqueNonReadOnlyOrganizationMembers { get; set; }
        public int UniqueReadOnlyOrganizationMembers { get; set; }
        public int UniqueFreeOrganizationMembers { get; set; }
        public int UniqueBillableOrganizationMembers { get; set; }

        public string CreatedByUserID { get; set; }
        public string CreatedByUserName { get; set; }
        public string CreatedByUserEmail { get; set; }

        #endregion

        public override ApiModel.OrganizationForClient ToApiModel()
        {
            return new ApiModel.OrganizationForClient()
            {
                Id = Id,
                CreatedOn = CreatedOn,
                Name = Name,
                CreatedByUserID = CreatedByUserID,
                CreatedByUserName = CreatedByUserName,
                CreatedByUserEmail = CreatedByUserEmail,
                SubscriptionRequired = SubscriptionRequired,
                SubscriptionFreeUsers = SubscriptionFreeUsers,
                SubscriptionExpiration = SubscriptionExpiration,
                UniqueNonReadOnlyOrganizationMembers = UniqueNonReadOnlyOrganizationMembers,
                UniqueReadOnlyOrganizationMembers = UniqueReadOnlyOrganizationMembers,
                UniqueFreeOrganizationMembers = UniqueFreeOrganizationMembers,
                UniqueBillableOrganizationMembers = UniqueBillableOrganizationMembers
            };
        }
    }

    public class OrganizationForClientCollection
        : Common.Model.EntityCollection<OrganizationForClient, ApiModel.OrganizationForClientCollection>
    {
        public OrganizationForClientCollection(
            OrganizationForClient[] items,
            NucleusOneApp app = null
        ) : base(app, items) { }

        public static OrganizationForClientCollection FromApiModel(
            ApiModel.OrganizationForClientCollection apiModel,
            NucleusOneApp app = null
        )
        {
            return new OrganizationForClientCollection(
                items: apiModel.Organizations?.Select((x) => OrganizationForClient.FromApiModel(x, app)).ToArray());
        }

        public override ApiModel.OrganizationForClientCollection ToApiModel()
        {
            return new ApiModel.OrganizationForClientCollection()
            {
                Organizations = Items.Select((x) => x.ToApiModel()).ToArray()
            };
        }
    }

}