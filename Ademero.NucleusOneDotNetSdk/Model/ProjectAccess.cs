using System;
using System.Linq;

namespace Ademero.NucleusOneDotNetSdk.Model
{
    // Originally generated by nucleus_one_utilities.
    [Serializable]
    public class ProjectAccess : Common.Model.Entity<ApiModel.ProjectAccess>
    {
        private ProjectAccess(NucleusOneApp app) : base(app) { }

        public static ProjectAccess FromApiModel(
            ApiModel.ProjectAccess apiModel,
            NucleusOneApp app = null
        )
        {
            if (apiModel == null)
                return null;
            return new ProjectAccess(app)
            {
                Assignments = ProjectAccessAssignments.FromApiModel(apiModel.Assignments),
                MemberAccess = ProjectMemberAccess.FromApiModel(apiModel.MemberAccess)
            };
        }

        #region Properties

        public ProjectAccessAssignments Assignments { get; set; }
        public ProjectMemberAccess MemberAccess { get; set; }

        #endregion

        public override ApiModel.ProjectAccess ToApiModel()
        {
            return new ApiModel.ProjectAccess()
            {
                Assignments = Assignments.ToApiModel(),
                MemberAccess = MemberAccess.ToApiModel()
            };
        }
    }

    [Serializable]
    public class ProjectAccessCollection
        : Common.Model.EntityCollection<ProjectAccess, ApiModel.ProjectAccessCollection>
    {
        public ProjectAccessCollection(
            ProjectAccess[] items,
            NucleusOneApp app = null
        ) : base(app, items) { }

        public static ProjectAccessCollection FromApiModel(
            ApiModel.ProjectAccessCollection apiModel,
            NucleusOneApp app = null
        )
        {
            if (apiModel == null)
                return null;
            return new ProjectAccessCollection(
                items: apiModel.ProjectAccesss?.Select((x) => ProjectAccess.FromApiModel(x, app)).ToArray());
        }

        public override ApiModel.ProjectAccessCollection ToApiModel()
        {
            return new ApiModel.ProjectAccessCollection()
            {
                ProjectAccesss = Items.Select((x) => x.ToApiModel()).ToArray()
            };
        }
    }
}
