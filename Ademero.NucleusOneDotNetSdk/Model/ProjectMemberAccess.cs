using System;
using System.Collections.Generic;
using System.Linq;

namespace Ademero.NucleusOneDotNetSdk.Model
{
    // Originally generated by nucleus_one_utilities.
    [Serializable]
    public class ProjectMemberAccess : Common.Model.Entity<ApiModel.ProjectMemberAccess>
    {
        private ProjectMemberAccess(NucleusOneApp app) : base(app) { }

        public static Model.ProjectMemberAccess FromApiModel(
            ApiModel.ProjectMemberAccess apiModel,
            NucleusOneApp app = null
        )
        {
            return new Model.ProjectMemberAccess(app)
            {
                Tasks = apiModel.Tasks,
                Approvals = apiModel.Approvals,
                DocumentFolders = apiModel.DocumentFolders,
                AssetItems = apiModel.AssetItems
            };
        }

        #region Properties

        public string Tasks { get; set; }
        public string Approvals { get; set; }
        public string DocumentFolders { get; set; }
        public string AssetItems { get; set; }

        #endregion

        public override ApiModel.ProjectMemberAccess ToApiModel()
        {
            return new ApiModel.ProjectMemberAccess()
            {
                Tasks = Tasks,
                Approvals = Approvals,
                DocumentFolders = DocumentFolders,
                AssetItems = AssetItems
            };
        }
    }

    [Serializable]
    public class ProjectMemberAccessCollection
        : Common.Model.EntityCollection<ProjectMemberAccess, ApiModel.ProjectMemberAccessCollection>
    {
        public ProjectMemberAccessCollection(
            ProjectMemberAccess[] items,
            NucleusOneApp app = null
        ) : base(app, items) { }

        public static ProjectMemberAccessCollection FromApiModel(
            ApiModel.ProjectMemberAccessCollection apiModel,
            NucleusOneApp app = null
        )
        {
            return new ProjectMemberAccessCollection(
                items: apiModel.ProjectMemberAccesss?.Select((x) => ProjectMemberAccess.FromApiModel(x, app)).ToArray());
        }

        public override ApiModel.ProjectMemberAccessCollection ToApiModel()
        {
            return new ApiModel.ProjectMemberAccessCollection()
            {
                ProjectMemberAccesss = Items.Select((x) => x.ToApiModel()).ToArray()
            };
        }
    }
}
