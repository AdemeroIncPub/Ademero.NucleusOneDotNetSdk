using System;
using System.Linq;

namespace Ademero.NucleusOneDotNetSdk.Model
{
    // Originally generated by nucleus_one_utilities
    [Serializable]
    public class ProjectMember : Common.Model.Entity<ApiModel.ProjectMember>
    {
        private ProjectMember(NucleusOneApp app) : base(app) { }

        public static ProjectMember FromApiModel(
            ApiModel.ProjectMember apiModel,
            NucleusOneApp app = null
        )
        {
            if (apiModel == null)
                return null;
            return new ProjectMember(app)
            {
                Id = apiModel.Id,
                CreatedOn = apiModel.CreatedOn,
                OrganizationMemberId = apiModel.OrganizationMemberId,
                OrganizationMemberIsAdmin = apiModel.OrganizationMemberIsAdmin,
                OrganizationId = apiModel.OrganizationId,
                OrganizationName = apiModel.OrganizationName,
                ProjectId = apiModel.ProjectId,
                ProjectName = apiModel.ProjectName,
                ProjectIsDisabled = apiModel.ProjectIsDisabled,
                ProjectAccess = ProjectAccess.FromApiModel(apiModel.ProjectAccess),
                UserId = apiModel.UserId,
                UserName = apiModel.UserName,
                UserNameLower = apiModel.UserNameLower,
                UserEmail = apiModel.UserEmail,
                Disabled = apiModel.Disabled,
                IsReadOnly = apiModel.IsReadOnly,
                IsAdmin = apiModel.IsAdmin
            };
        }

        #region Properties

        public string Id { get; set; }
        
        public string CreatedOn { get; set; }
        
        public string OrganizationMemberId { get; set; }
        
        public bool OrganizationMemberIsAdmin { get; set; }
        
        public string OrganizationId { get; set; }
        
        public string OrganizationName { get; set; }
        
        public string ProjectId { get; set; }
        
        public string ProjectName { get; set; }
        
        public bool ProjectIsDisabled { get; set; }
        
        public ProjectAccess ProjectAccess { get; set; }
        
        public string UserId { get; set; }
        
        public string UserName { get; set; }
        
        public string UserNameLower { get; set; }
        
        public string UserEmail { get; set; }
        
        public bool Disabled { get; set; }
        
        public bool IsReadOnly { get; set; }
        
        public bool IsAdmin { get; set; }

        #endregion

        public override ApiModel.ProjectMember ToApiModel()
        {
            return new ApiModel.ProjectMember()
            {
                Id = Id,
                CreatedOn = CreatedOn,
                OrganizationMemberId = OrganizationMemberId,
                OrganizationMemberIsAdmin = OrganizationMemberIsAdmin,
                OrganizationId = OrganizationId,
                OrganizationName = OrganizationName,
                ProjectId = ProjectId,
                ProjectName = ProjectName,
                ProjectIsDisabled = ProjectIsDisabled,
                ProjectAccess = ProjectAccess.ToApiModel(),
                UserId = UserId,
                UserName = UserName,
                UserNameLower = UserNameLower,
                UserEmail = UserEmail,
                Disabled = Disabled,
                IsReadOnly = IsReadOnly,
                IsAdmin = IsAdmin
            };
        }
    }

    [Serializable]
    public class ProjectMemberCollection
        : Common.Model.EntityCollection<ProjectMember, ApiModel.ProjectMemberCollection>
    {
        public ProjectMemberCollection(
            ProjectMember[] items,
            NucleusOneApp app = null
        ) : base(app, items) { }

        public static ProjectMemberCollection FromApiModel(
            ApiModel.ProjectMemberCollection apiModel,
            NucleusOneApp app = null
        )
        {
            if (apiModel == null)
                return null;
            return new ProjectMemberCollection(
                items: apiModel.ProjectMembers?.Select((x) => ProjectMember.FromApiModel(x, app)).ToArray());
        }

        public override ApiModel.ProjectMemberCollection ToApiModel()
        {
            return new ApiModel.ProjectMemberCollection()
            {
                ProjectMembers = Items.Select((x) => x.ToApiModel()).ToArray()
            };
        }
    }
}
