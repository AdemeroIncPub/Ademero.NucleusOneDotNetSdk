using Newtonsoft.Json;
using System;

namespace Ademero.NucleusOneDotNetSdk.ApiModel
{
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class ProjectMember : Common.ApiModel.Entity<ProjectMember>
    {
        public ProjectMember() { }

        #region Properties

        [JsonProperty("ID")]
        public string Id { get; set; }

        [JsonProperty("CreatedOn")]
        public string CreatedOn { get; set; }

        [JsonProperty("OrganizationMemberID")]
        public string OrganizationMemberId { get; set; }

        [JsonProperty("OrganizationMemberIsAdmin")]
        public bool OrganizationMemberIsAdmin { get; set; }

        [JsonProperty("OrganizationID")]
        public string OrganizationId { get; set; }

        [JsonProperty("OrganizationName")]
        public string OrganizationName { get; set; }

        [JsonProperty("ProjectID")]
        public string ProjectId { get; set; }

        [JsonProperty("ProjectName")]
        public string ProjectName { get; set; }

        [JsonProperty("ProjectIsDisabled")]
        public bool ProjectIsDisabled { get; set; }

        [JsonProperty("ProjectAccess")]
        public ProjectAccess ProjectAccess { get; set; }

        [JsonProperty("UserID")]
        public string UserId { get; set; }

        [JsonProperty("UserName")]
        public string UserName { get; set; }

        [JsonProperty("UserNameLower")]
        public string UserNameLower { get; set; }

        [JsonProperty("UserEmail")]
        public string UserEmail { get; set; }

        [JsonProperty("Disabled")]
        public bool Disabled { get; set; }

        [JsonProperty("IsReadOnly")]
        public bool IsReadOnly { get; set; }

        [JsonProperty("IsAdmin")]
        public bool IsAdmin { get; set; }

        #endregion
    }

    // Originally generated by nucleus_one_utilities
    // Serializable members must be explicitly marked with [JsonProperty].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class ProjectMemberCollection : QueryResultEntityCollection<ProjectMemberCollection, ProjectMember>
    {
        public ProjectMemberCollection() { }

        #region Properties

        [JsonProperty(nameof(ProjectMembers))]
        public ProjectMember[] ProjectMembers
        {
            get => Items;
            set => Items = value;
        }

        #endregion
    }
}
