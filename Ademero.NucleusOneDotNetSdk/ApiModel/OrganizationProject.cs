using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace Ademero.NucleusOneDotNetSdk.ApiModel
{
    // Originally generated by nucleus_one_utilities.
    // Serializable members must be explicitly marked with [JsonKey].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class OrganizationProject : Common.ApiModel.Entity<OrganizationProject>
    {
        public OrganizationProject() { }

        #region Properties

        [JsonProperty("ID")]
        public string Id { get; set; }

        [JsonProperty("OrganizationID")]
        public string OrganizationId { get; set; }

        [JsonProperty("AccessType")]
        public string AccessType { get; set; }

        [JsonProperty("CreatedOn")]
        public string CreatedOn { get; set; }

        [JsonProperty("CreatedByUserID")]
        public string CreatedByUserId { get; set; }

        [JsonProperty("CreatedByUserEmail")]
        public string CreatedByUserEmail { get; set; }

        [JsonProperty("CreatedByUserName")]
        public string CreatedByUserName { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("NameLower")]
        public string NameLower { get; set; }

        [JsonProperty("Disabled")]
        public bool? Disabled { get; set; }

        [JsonProperty("IsMarkedForPurge")]
        public bool? IsMarkedForPurge { get; set; }

        [JsonProperty("PurgeMarkedOn")]
        public string PurgeMarkedOn { get; set; }

        [JsonProperty("PurgeMarkedByUserID")]
        public string PurgeMarkedByUserId { get; set; }

        [JsonProperty("PurgeMarkedByUserName")]
        public string PurgeMarkedByUserName { get; set; }

        [JsonProperty("PurgeMarkedByUserEmail")]
        public string PurgeMarkedByUserEmail { get; set; }

        #endregion
    }

    // Originally generated by nucleus_one_utilities
    // Serializable members must be explicitly marked with [JsonProperty].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class OrganizationProjectCollection : QueryResultEntityCollection<OrganizationProjectCollection, OrganizationProject>
    {
        public OrganizationProjectCollection() { }

        #region Properties

        [JsonProperty("Projects")]
        public OrganizationProject[] Projects
        {
            get => Items;
            set => Items = value;
        }

        #endregion
    }
}
