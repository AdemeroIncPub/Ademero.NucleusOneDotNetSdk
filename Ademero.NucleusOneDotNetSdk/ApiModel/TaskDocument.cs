using Newtonsoft.Json;
using System;
using System.Collections.Generic;

namespace Ademero.NucleusOneDotNetSdk.ApiModel
{
    // Originally generated by nucleus_one_utilities
    // Serializable members must be explicitly marked with [JsonProperty].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class TaskDocument : Common.ApiModel.Entity<TaskDocument>, IDocumentMixin
    {
        public TaskDocument() { }

        #region Properties
        
        public string Id { get; set; }

        [JsonProperty("TaskID")]
        public string TaskId { get; set; }

        [JsonProperty("DocumentID")]
        public string DocumentId { get; set; }

        [JsonProperty("ThumbnailUrl")]
        public string ThumbnailUrl { get; set; }

        public string OrganizationId { get; set; }
        
        public string ProjectId { get; set; }
        
        public string ProjectName { get; set; }
        
        public string ProjectAccessType { get; set; }
        
        public string DocumentFolderId { get; set; }
        
        public string DocumentFolderPath { get; set; }
        
        public string DocumentFolderHexColor { get; set; }
        
        public string CreatedOn { get; set; }
        
        public string CreatedByUserId { get; set; }
        
        public string CreatedByUserEmail { get; set; }
        
        public string CreatedByUserName { get; set; }
        
        public string ModifiedOn { get; set; }
        
        public string ModifiedByUserId { get; set; }
        
        public string ModifiedByUserEmail { get; set; }
        
        public string ModifiedByUserName { get; set; }
        
        public string Name { get; set; }
        
        public string NameLower { get; set; }
        
        public string Origin { get; set; }
        
        public bool IsActive { get; set; }
        
        public bool IsMarkedForPurge { get; set; }
        
        public bool IsSigned { get; set; }
        
        public bool SignatureSessionIsActive { get; set; }
        
        public bool HasSinglePageImages { get; set; }
        
        public string SignaturesCompletedOn { get; set; }
        
        public string PurgeMarkedOn { get; set; }
        
        public bool FailedBuildAttempts { get; set; }
        
        public string LastError { get; set; }
        
        public int PageCount { get; set; }
        
        public int FileSize { get; set; }
        
        public string BucketName { get; set; }
        
        public string SourceObjectName { get; set; }
        
        public string ThumbnailObjectName { get; set; }
        
        public Dictionary<string, string>[] PreviewMetadata { get; set; }
        
        public string[] AssignmentUserEmails { get; set; }
        
        public int Revision { get; set; }
        
        public string RevisionCreatedOn { get; set; }
        
        public string FormSubmissionId { get; set; }
        
        public string PaperSize { get; set; }
        
        public string PaperOrientation { get; set; }
        
        public double PaperMarginLeft { get; set; }
        
        public double PaperMarginRight { get; set; }
        
        public double PaperMarginTop { get; set; }
        
        public double PaperMarginBottom { get; set; }
        
        public string GroupId { get; set; }

        #endregion
    }

    // Originally generated by nucleus_one_utilities
    // Serializable members must be explicitly marked with [JsonProperty].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class TaskDocumentCollection : QueryResultEntityCollection<TaskDocumentCollection, TaskDocument>
    {
        public TaskDocumentCollection() { }

        #region Properties

        [JsonProperty("TaskDocuments")]
        public TaskDocument[] TaskDocuments
        {
            get => Items;
            set => Items = value;
        }

        #endregion
    }

    // Originally generated by nucleus_one_utilities
    public interface IDocumentMixin
    {
        #region Properties

        [JsonProperty("ID")]
        string Id { get; set; }

        [JsonProperty("OrganizationID")]
        string OrganizationId { get; set; }

        [JsonProperty("ProjectID")]
        string ProjectId { get; set; }

        [JsonProperty("ProjectName")]
        string ProjectName { get; set; }

        [JsonProperty("ProjectAccessType")]
        string ProjectAccessType { get; set; }

        [JsonProperty("DocumentFolderID")]
        string DocumentFolderId { get; set; }

        [JsonProperty("DocumentFolderPath")]
        string DocumentFolderPath { get; set; }

        [JsonProperty("DocumentFolderHexColor")]
        string DocumentFolderHexColor { get; set; }

        [JsonProperty("CreatedOn")]
        string CreatedOn { get; set; }

        [JsonProperty("CreatedByUserID")]
        string CreatedByUserId { get; set; }

        [JsonProperty("CreatedByUserEmail")]
        string CreatedByUserEmail { get; set; }

        [JsonProperty("CreatedByUserName")]
        string CreatedByUserName { get; set; }

        [JsonProperty("ModifiedOn")]
        string ModifiedOn { get; set; }

        [JsonProperty("ModifiedByUserID")]
        string ModifiedByUserId { get; set; }

        [JsonProperty("ModifiedByUserEmail")]
        string ModifiedByUserEmail { get; set; }

        [JsonProperty("ModifiedByUserName")]
        string ModifiedByUserName { get; set; }

        [JsonProperty("Name")]
        string Name { get; set; }

        [JsonProperty("NameLower")]
        string NameLower { get; set; }

        [JsonProperty("Origin")]
        string Origin { get; set; }

        [JsonProperty("IsActive")]
        bool IsActive { get; set; }

        [JsonProperty("IsMarkedForPurge")]
        bool IsMarkedForPurge { get; set; }

        [JsonProperty("IsSigned")]
        bool IsSigned { get; set; }

        [JsonProperty("SignatureSessionIsActive")]
        bool SignatureSessionIsActive { get; set; }

        [JsonProperty("HasSinglePageImages")]
        bool HasSinglePageImages { get; set; }

        [JsonProperty("SignaturesCompletedOn")]
        string SignaturesCompletedOn { get; set; }

        [JsonProperty("PurgeMarkedOn")]
        string PurgeMarkedOn { get; set; }

        [JsonProperty("FailedBuildAttempts")]
        bool FailedBuildAttempts { get; set; }

        /// There should be an index exemption for this field
        [JsonProperty("LastError")]
        string LastError { get; set; }

        [JsonProperty("PageCount")]
        int PageCount { get; set; }

        [JsonProperty("FileSize")]
        int FileSize { get; set; }

        [JsonProperty("BucketName")]
        string BucketName { get; set; }

        [JsonProperty("SourceObjectName")]
        string SourceObjectName { get; set; }

        [JsonProperty("ThumbnailObjectName")]
        string ThumbnailObjectName { get; set; }

        [JsonProperty("PreviewMetadata")]
        Dictionary<string, string>[] PreviewMetadata { get; set; }

        [JsonProperty("AssignmentUserEmails")]
        string[] AssignmentUserEmails { get; set; }

        [JsonProperty("Revision")]
        int Revision { get; set; }

        [JsonProperty("RevisionCreatedOn")]
        string RevisionCreatedOn { get; set; }

        [JsonProperty("FormSubmissionID")]
        string FormSubmissionId { get; set; }

        [JsonProperty("PaperSize")]
        string PaperSize { get; set; }

        [JsonProperty("PaperOrientation")]
        string PaperOrientation { get; set; }

        [JsonProperty("PaperMarginLeft")]
        double PaperMarginLeft { get; set; }

        [JsonProperty("PaperMarginRight")]
        double PaperMarginRight { get; set; }

        [JsonProperty("PaperMarginTop")]
        double PaperMarginTop { get; set; }

        [JsonProperty("PaperMarginBottom")]
        double PaperMarginBottom { get; set; }

        [JsonProperty("GroupID")]
        string GroupId { get; set; }

        #endregion
    }
}
