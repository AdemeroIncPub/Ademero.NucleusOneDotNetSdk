using Newtonsoft.Json;
using System;
using System.Collections.Generic;

namespace Ademero.NucleusOneDotNetSdk.ApiModel
{
    // Originally generated by nucleus_one_utilities
    // Serializable members must be explicitly marked with [JsonKey].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class SearchResult : Common.ApiModel.Entity<SearchResult>
    {
        public SearchResult() { }

        #region Properties

        [JsonProperty("ContentType")]
        public string ContentType { get; set; }

        [JsonProperty("ID")]
        public string Id { get; set; }

        [JsonProperty("AncestorIDs")]
        public string[] AncestorIds { get; set; }

        [JsonProperty("OrganizationID")]
        public string OrganizationId { get; set; }

        [JsonProperty("ProjectID")]
        public string ProjectId { get; set; }

        [JsonProperty("ProjectName")]
        public string ProjectName { get; set; }

        [JsonProperty("ProjectAccessType")]
        public string ProjectAccessType { get; set; }

        [JsonProperty("ItemID")]
        public string ItemId { get; set; }

        [JsonProperty("ItemType")]
        public string ItemType { get; set; }

        [JsonProperty("UniqueID")]
        public string UniqueId { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("CreatedOn")]
        public string CreatedOn { get; set; }

        [JsonProperty("DueOn")]
        public string DueOn { get; set; }

        [JsonProperty("Priority")]
        public int? Priority { get; set; }

        [JsonProperty("TaskMilestoneName")]
        public string TaskMilestoneName { get; set; }

        [JsonProperty("TaskStateName")]
        public string TaskStateName { get; set; }

        [JsonProperty("TaskDurationMultiplier")]
        public double? TaskDurationMultiplier { get; set; }

        [JsonProperty("TaskDurationInterval")]
        public string TaskDurationInterval { get; set; }

        [JsonProperty("Tags")]
        public string[] Tags { get; set; }

        [JsonProperty("CompletedOn")]
        public string CompletedOn { get; set; }

        [JsonProperty("PurgeDate")]
        public string PurgeDate { get; set; }

        [JsonProperty("PageCount")]
        public int? PageCount { get; set; }

        [JsonProperty("FileSize")]
        public int? FileSize { get; set; }

        [JsonProperty("ThumbnailUrl")]
        public string ThumbnailUrl { get; set; }

        [JsonProperty("IsSigned")]
        public bool? IsSigned { get; set; }

        [JsonProperty("AssignmentUserEmail")]
        public string AssignmentUserEmail { get; set; }

        [JsonProperty("AssignmentUserEmails")]
        public string[] AssignmentUserEmails { get; set; }

        [JsonProperty("AssignmentUserName")]
        public string AssignmentUserName { get; set; }

        [JsonProperty("DocumentID")]
        public string DocumentId { get; set; }

        [JsonProperty("DocumentFolderID")]
        public string DocumentFolderId { get; set; }

        [JsonProperty("DocumentOrigin")]
        public string DocumentOrigin { get; set; }

        [JsonProperty("DocumentFolderPath")]
        public string DocumentFolderPath { get; set; }

        [JsonProperty("DocumentFolderHexColor")]
        public string DocumentFolderHexColor { get; set; }

        [JsonProperty("DocumentSignatureSessionID")]
        public string DocumentSignatureSessionId { get; set; }

        [JsonProperty("DocumentSignatureSessionIsActive")]
        public bool? DocumentSignatureSessionIsActive { get; set; }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("PreviewMetadata")]
        public Dictionary<string, string>[] PreviewMetadata { get; set; }

        [JsonProperty("PrimaryDocument")]
        public TaskDocument PrimaryDocument { get; set; }

        [JsonProperty("UserName")]
        public string UserName { get; set; }

        [JsonProperty("UserEmail")]
        public string UserEmail { get; set; }

        [JsonProperty("CreatedByUserEmail")]
        public string CreatedByUserEmail { get; set; }

        [JsonProperty("CreatedByUserName")]
        public string CreatedByUserName { get; set; }

        [JsonProperty("CompletedByUserEmail")]
        public string CompletedByUserEmail { get; set; }

        [JsonProperty("CompletedByUserName")]
        public string CompletedByUserName { get; set; }

        [JsonProperty("ProcessName")]
        public string ProcessName { get; set; }

        [JsonProperty("ProcessElementName")]
        public string ProcessElementName { get; set; }

        [JsonProperty("Result")]
        public string Result { get; set; }

        [JsonProperty("Score")]
        public double? Score { get; set; }

        #endregion
    }

    // Originally generated by nucleus_one_utilities
    // Serializable members must be explicitly marked with [JsonKey].
    [Serializable]
    [JsonObject(MemberSerialization.OptIn, ItemNullValueHandling = NullValueHandling.Ignore)]
    public class SearchResultCollection : QueryResultEntityCollection<SearchResultCollection, SearchResult>
    {
        public SearchResultCollection() { }

        #region Properties

        [JsonProperty("SearchResults")]
        public SearchResult[] SearchResults
        {
            get => Items;
            set => Items = value;
        }

        #endregion
    }
}
